#!/bin/bash

qplot_opts=":d:t:s:o:x:y:X:Y:T:f:n"
data_file="data.txt"
plot_title="QPlot Data"
x_label=""
y_label=""
x_dim="1920"
y_dim="1080"
out_file=""
terminal="pngcairo"
time_format=""
no_index=""

while getopts $qplot_opts opt; do
    case "$opt" in
        # The datafile that we're going to polot
        d)
            data_file="$OPTARG"
            ;;
        # The title of the plot
        T)
            plot_title="$OPTARG"
            ;;
        # the x label
        X)
            x_label="$OPTARG"
            ;;
        # the x label
        Y)
            y_label="$OPTARG"
            ;;
        x)
            x_dim="$OPTARG"
            ;;
        y)
            y_dim="$OPTARG"
            ;;
        o)
            out_file="$OPTARG"
            ;;
        t)
            terminal="$OPTARG"
            ;;
        f)
            time_format="$OPTARG"
            ;;
        n)
            no_index="true"
            ;;
        :)
            echo "Option -${OPTARG} requires an argument."
            exit 1
            ;;
        ?)
        echo "Invalid option: -$OPTARG."
        exit 1
        ;;
    esac
done

get_gnuplot_script() {
    if [[ "$terminal" == "pngcairo" ]]; then
        resp="set terminal pngcairo size $x_dim,$y_dim; "
    elif [[ "$terminal" == "dumb" ]]; then
        resp="set terminal dumb size $x_dim,$y_dim; "
    fi

    if [[ $out_file != "" ]]; then
        resp+="set output '$out_file'; "
    fi

    if [[ $time_format != "" ]]; then
        resp+="set xdata time; "
        resp+="set timefmt \"$time_format\"; "
        resp+="set format x \"%m/%d/%Y %H:%M:%S\"; "
    fi

    using_arg="1:2"
    if [[ $no_index == "true" ]]; then
        using_arg="1"
    fi

    resp+="set title \"$plot_title\"; "
    resp+="set ylabel '$y_label'; "
    resp+="set xlabel '$x_label'; "
    resp+="plot '$data_file' using $using_arg with lines title ''; "
    echo $resp
}

render_single_plot() {
    echo "Plotting $data_file in $out_file" 1>&2

    gnuScript=$(get_gnuplot_script)
    echo -e $gnuScript 1>&2

    gnuplot -e "$gnuScript"
}

render_single_plot
